{"mappings":"AAAA,MAAM,UAAU;AAChB,MAAM,kBAAkB,SAAS,aAAa,CAAC;AAE/C,MAAM,cAAc,SAAS,aAAa,CAAC;AAC3C,MAAM,YAAY,SAAS,aAAa,CAAC;AACzC,MAAM,mBAAmB,SAAS,aAAa,CAAC;AAEhD,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,uCAAuC;AAEvC,uCAAuC;AAEvC,MAAM,UAAU,eAAgB,IAAI;IAClC,IAAI;QACF,MAAM,MAAM,MAAM,MAChB,CAAC,wDAAwD,EAAE,KAAK,KAAK,EAAE,SAAS;QAGlF,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;QAE7B,MAAM,OAAO,MAAM,IAAI,IAAI;QAE3B,MAAM,SAAS,KAAK,IAAI,CAAC,OAAO;QAEhC,IAAI,OAAO,MAAM,KAAK,GAAG,MAAM,IAAI,MAAM;QAEzC,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,MAAM;IACR;AACF;AAEA,MAAM,eAAe,SAAU,YAAY;IACzC,IAAI,CAAC,cAAc;IAEnB,aAAa,OAAO,CAAC,CAAA;QACnB,MAAM,KAAK,SAAS,aAAa,CAAC;QAClC,GAAG,SAAS,GAAG;QACf,GAAG,SAAS,GAAG,CAAC;;;yBAGK,EAAE,KAAK,SAAS,CAAC;;;2CAGC,EAAE,KAAK,KAAK,CAAC;8CACV,EAAE,KAAK,SAAS,CAAC;;;WAGpD,CAAC;QACR,iBAAiB,WAAW,CAAC;IAC/B;AACF;AAEA,UAAU,gBAAgB,CAAC,SAAS,eAAgB,CAAC;IACnD,EAAE,cAAc;IAChB,MAAM,cAAc,YAAY,KAAK,CAAC,IAAI;IAC1C,IAAI,gBAAgB,IAAI,OAAO,MAAM;IAErC,IAAI;QACF,MAAM,eAAe,MAAM,QAAQ;QACnC,QAAQ,GAAG,CAAC;QACZ,aAAa;IACf,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC;IAChB;AACF","sources":["src/js/controller.js"],"sourcesContent":["const API_KEY = 'fa44fa6c-502e-4624-9e90-2f4c108b8361';\nconst recipeContainer = document.querySelector('.recipe');\n\nconst searchInput = document.querySelector('.search__field');\nconst searchBtn = document.querySelector('.search__btn');\nconst searchResultsDiv = document.querySelector('.results');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\n\nconst getData = async function (item) {\n  try {\n    const res = await fetch(\n      `https://forkify-api.herokuapp.com/api/v2/recipes?search=${item}&key=${API_KEY}`\n    );\n\n    if (!res.ok) throw new Error('Failed to get data');\n\n    const data = await res.json();\n\n    const result = data.data.recipes;\n\n    if (result.length === 0) throw new Error('Invalid search Term');\n\n    return result;\n  } catch (err) {\n    alert(err);\n  }\n};\n\nconst renderSearch = function (searchResult) {\n  if (!searchResult) return;\n\n  searchResult.forEach(item => {\n    const li = document.createElement('li');\n    li.classList = 'preview';\n    li.innerHTML = ` \n            <a class=\"preview__link preview__link--active\" href=\"#23456\">\n              <figure class=\"preview__fig\">\n                <img src=${item.image_url} alt=\"Test\" />\n              </figure>\n              <div class=\"preview__data\">\n                <h4 class=\"preview__title\">${item.title}</h4>\n                <p class=\"preview__publisher\">${item.publisher}</p>\n              </div>\n            </a>\n           `;\n    searchResultsDiv.appendChild(li);\n  });\n};\n\nsearchBtn.addEventListener('click', async function (e) {\n  e.preventDefault();\n  const searchValue = searchInput.value.trim();\n  if (searchValue === '') return alert('Search field cannot be empty.');\n\n  try {\n    const searchResult = await getData(searchValue);\n    console.log(searchResult);\n    renderSearch(searchResult);\n  } catch (err) {\n    console.error(err);\n  }\n});\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}